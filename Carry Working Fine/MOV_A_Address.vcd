$date
	Sat Mar 27 18:17:13 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MOV_A_Address_tb $end
$var wire 4 ! ALU_to_A [3:0] $end
$var wire 4 " ALU_to_B [3:0] $end
$var wire 1 # ALU_to_F_Cout $end
$var wire 4 $ A_to_ALU [3:0] $end
$var wire 4 % A_to_OUT [3:0] $end
$var wire 4 & A_to_RAM [3:0] $end
$var wire 4 ' A_to_TMP [3:0] $end
$var wire 4 ( B_to_A [3:0] $end
$var wire 4 ) B_to_ALU [3:0] $end
$var wire 1 * Cea $end
$var wire 1 + Cei $end
$var wire 1 , Cetmp $end
$var wire 1 - Cp $end
$var wire 1 . EaOut $end
$var wire 1 / EaRAM $end
$var wire 1 0 Eatmp $end
$var wire 1 1 Eba $end
$var wire 1 2 Ei $end
$var wire 1 3 Ep $end
$var wire 1 4 Etmpb $end
$var wire 1 5 Eu $end
$var wire 1 6 HLT $end
$var wire 4 7 IR_to_Control [3:0] $end
$var wire 4 8 IR_to_MAR [3:0] $end
$var wire 1 9 LA $end
$var wire 1 : LaALU $end
$var wire 1 ; LaOUT $end
$var wire 1 < LaRam $end
$var wire 1 = Lab $end
$var wire 1 > LbALU $end
$var wire 1 ? Lbtmp $end
$var wire 1 @ Li $end
$var wire 1 A Lmi $end
$var wire 1 B Lmp $end
$var wire 1 C Lo $end
$var wire 1 D LtmpRAM $end
$var wire 1 E Ltmpa $end
$var wire 4 F MAR_to_RAM [3:0] $end
$var wire 4 G OUT_to_disp [3:0] $end
$var wire 4 H PC_to_MAR [3:0] $end
$var wire 4 I RAM_to_A [3:0] $end
$var wire 8 J RAM_to_IR [7:0] $end
$var wire 4 K RAM_to_TMP [3:0] $end
$var wire 1 L Su $end
$var wire 4 M TMP_to_ALU [3:0] $end
$var wire 4 N TMP_to_B [3:0] $end
$var reg 1 O clk $end
$var reg 4 P input_address [3:0] $end
$var reg 1 Q input_mode $end
$var reg 8 R input_program [7:0] $end
$var reg 1 S reset $end
$scope module example_tbCS $end
$var wire 4 T IR_to_Control [3:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 1 W Cea $end
$var reg 1 X Cei $end
$var reg 1 Y Cetmp $end
$var reg 1 Z Cp $end
$var reg 1 [ EaOut $end
$var reg 1 \ EaRAM $end
$var reg 1 ] Eatmp $end
$var reg 1 ^ Eba $end
$var reg 1 _ Ei $end
$var reg 1 ` Ep $end
$var reg 1 a Etmpb $end
$var reg 1 b Eu $end
$var reg 1 c HLT $end
$var reg 1 d LA $end
$var reg 1 e LaALU $end
$var reg 1 f LaOUT $end
$var reg 1 g LaRam $end
$var reg 1 h Lab $end
$var reg 1 i LbALU $end
$var reg 1 j Lbtmp $end
$var reg 1 k Li $end
$var reg 1 l Lmi $end
$var reg 1 m Lmp $end
$var reg 1 n Lo $end
$var reg 1 o LtmpRAM $end
$var reg 1 p Ltmpa $end
$var reg 1 q Su $end
$var reg 6 r counter_state [5:0] $end
$upscope $end
$scope module example_tbPC $end
$var wire 1 - Cp $end
$var wire 1 3 Ep $end
$var wire 1 6 HLT $end
$var wire 4 s PC_to_MAR [3:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 4 t count [3:0] $end
$var reg 4 u count_buffer [3:0] $end
$var reg 1 v first $end
$upscope $end
$scope module example_tbMAR $end
$var wire 4 w IR_to_MAR [3:0] $end
$var wire 1 A Lmi $end
$var wire 1 B Lmp $end
$var wire 4 x MAR_to_RAM [3:0] $end
$var wire 4 y PC_to_MAR [3:0] $end
$var wire 1 U clk $end
$var reg 4 z address [3:0] $end
$upscope $end
$scope module example_tbRAMRAM $end
$var wire 4 { A_to_RAM [3:0] $end
$var wire 1 * Cea $end
$var wire 1 + Cei $end
$var wire 1 , Cetmp $end
$var wire 1 9 LA $end
$var wire 4 | MAR_to_RAM [3:0] $end
$var wire 4 } RAM_to_A [3:0] $end
$var wire 8 ~ RAM_to_IR [7:0] $end
$var wire 4 !" RAM_to_TMP [3:0] $end
$var wire 1 U clk $end
$var wire 4 "" input_address [3:0] $end
$var wire 1 #" input_mode $end
$var wire 8 $" input_program [7:0] $end
$var integer 32 %" address [31:0] $end
$var reg 4 &" dataA [3:0] $end
$var reg 8 '" dataIR [7:0] $end
$var reg 4 (" dataTMP [3:0] $end
$upscope $end
$scope module example_tbIR $end
$var wire 1 2 Ei $end
$var wire 4 )" IR_to_Control [3:0] $end
$var wire 4 *" IR_to_MAR [3:0] $end
$var wire 1 @ Li $end
$var wire 8 +" RAM_to_IR [7:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 4 ," address_field [3:0] $end
$var reg 4 -" opcode [3:0] $end
$var reg 4 ." operand [3:0] $end
$upscope $end
$scope module example_tbAR $end
$var wire 4 /" ALU_to_A [3:0] $end
$var wire 4 0" A_to_ALU [3:0] $end
$var wire 4 1" A_to_OUT [3:0] $end
$var wire 4 2" A_to_RAM [3:0] $end
$var wire 4 3" A_to_TMP [3:0] $end
$var wire 4 4" B_to_A [3:0] $end
$var wire 1 . EaOut $end
$var wire 1 / EaRAM $end
$var wire 1 0 Eatmp $end
$var wire 1 : LaALU $end
$var wire 1 < LaRam $end
$var wire 1 = Lab $end
$var wire 4 5" RAM_to_A [3:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 4 6" dataA [3:0] $end
$var reg 4 7" dataOut [3:0] $end
$var reg 4 8" dataRAM [3:0] $end
$var reg 4 9" dataTMP [3:0] $end
$upscope $end
$scope module example_tbTMPR $end
$var wire 4 :" A_to_TMP [3:0] $end
$var wire 1 4 Etmpb $end
$var wire 1 D LtmpRAM $end
$var wire 1 E Ltmpa $end
$var wire 4 ;" RAM_to_TMP [3:0] $end
$var wire 4 <" TMP_to_ALU [3:0] $end
$var wire 4 =" TMP_to_B [3:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 4 >" dataOut [3:0] $end
$var reg 4 ?" dataTMP [3:0] $end
$upscope $end
$scope module example_tbBR $end
$var wire 4 @" ALU_to_B [3:0] $end
$var wire 4 A" B_to_A [3:0] $end
$var wire 4 B" B_to_ALU [3:0] $end
$var wire 1 1 Eba $end
$var wire 1 > LbALU $end
$var wire 1 ? Lbtmp $end
$var wire 4 C" TMP_to_B [3:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 4 D" dataB [3:0] $end
$var reg 4 E" dataOut [3:0] $end
$upscope $end
$scope module example_tbALU $end
$var wire 4 F" ALU_to_A [3:0] $end
$var wire 4 G" ALU_to_B [3:0] $end
$var wire 1 # ALU_to_F_Cout $end
$var wire 4 H" A_to_ALU [3:0] $end
$var wire 4 I" B_to_ALU [3:0] $end
$var wire 1 5 Eu $end
$var wire 4 J" IR_to_Control [3:0] $end
$var wire 4 K" TMP_to_ALU [3:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 1 L" Carryout $end
$var reg 4 M" result [3:0] $end
$var reg 4 N" resultOut [3:0] $end
$scope task add_sub $end
$var reg 4 O" A [3:0] $end
$var reg 4 P" B [3:0] $end
$var reg 4 Q" BB [3:0] $end
$var reg 1 R" Carryin $end
$var reg 1 S" Carryout $end
$var reg 4 T" Sum [3:0] $end
$upscope $end
$upscope $end
$scope module example_tbOUTR $end
$var wire 4 U" A_to_OUT [3:0] $end
$var wire 1 ; LaOUT $end
$var wire 4 V" OUT_to_disp [3:0] $end
$var wire 1 U clk $end
$var wire 1 V reset $end
$var reg 4 W" dataDisp [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx W"
bx V"
bx U"
bx T"
xS"
xR"
bx Q"
bx P"
bx O"
bx N"
bx M"
0L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bz ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bz 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bz +"
bx *"
bx )"
bz ("
bz '"
bz &"
b10000 %"
bx $"
x#"
bx ""
bz !"
bz ~
bz }
b0 |
bx {
b0 z
bz y
b0 x
bx w
0v
bz u
b0 t
bz s
bx r
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
1V
1U
bx T
1S
bx R
xQ
bx P
1O
bx N
bx M
xL
bz K
bz J
bz I
bz H
bx G
b0 F
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
bx 8
bx 7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
bx %
bx $
0#
bx "
bx !
$end
#1
bz ,"
bz 8
bz w
bz *"
bz ."
bz -"
bz 7
bz T
bz )"
bz J"
bz 7"
bz %
bz 1"
bz U"
bz 8"
bz &
bz {
bz 2"
bz 9"
bz '
bz 3"
bz :"
bz 6"
bz $
bz 0"
bz H"
bz >"
bz N
bz ="
bz C"
bz ?"
bz M
bz <"
bz K"
bz E"
bz (
bz 4"
bz A"
b0 D"
b0 )
b0 B"
b0 I"
bz N"
bz "
bz @"
bz G"
bz !
bz /"
bz F"
bz W"
bz G
bz V"
0c
06
b1 r
0S
0V
#2
1Q
1#"
1S
1V
#3
b1 R
b1 $"
b1001 P
b1001 ""
#4
b11 R
b11 $"
b1010 P
b1010 ""
#5
b1111001 R
b1111001 $"
b0 P
b0 ""
#6
b110000 R
b110000 $"
b1 P
b1 ""
#7
b1111010 R
b1111010 $"
b10 P
b10 ""
#8
b100000 R
b100000 $"
b11 P
b11 ""
#9
0Q
0#"
#10
bz z
bz F
bz x
bz |
b10 r
0[
0.
0f
0;
0i
0>
0Y
0,
0o
0D
0d
09
0\
0/
0e
0:
0a
04
0p
0E
0n
0C
0^
01
0j
0?
0b
05
0q
0L
0]
00
0h
0=
0g
0<
0_
02
0k
0@
0W
0*
0X
0+
0l
0A
1m
1B
1`
13
0Z
0-
0O
0U
#20
b0 z
b0 F
b0 x
b0 |
b0 u
b0 H
b0 s
b0 y
1O
1U
#30
b100 r
0m
0B
0`
03
1Z
1-
0O
0U
#40
b1 t
bz u
bz H
bz s
bz y
1O
1U
#50
b1000 r
1k
1@
1X
1+
0Z
0-
0O
0U
#60
b1001 ."
b111 -"
b111 7
b111 T
b111 )"
b111 J"
b1111001 '"
b1111001 J
b1111001 ~
b1111001 +"
1O
1U
#70
bz z
bz F
bz x
bz |
b10000 r
1_
12
0k
0@
0X
0+
1l
1A
0O
0U
#80
b1001 z
b1001 F
b1001 x
b1001 |
bz '"
bz J
bz ~
bz +"
b1001 ,"
b1001 8
b1001 w
b1001 *"
1O
1U
#90
b100000 r
1g
1<
0_
02
1W
1*
0l
0A
0O
0U
#100
b1 6"
b1 $
b1 0"
b1 H"
b1 &"
b1 I
b1 }
b1 !"
b1 5"
1O
1U
#110
b1 r
0g
0<
0W
0*
0O
0U
#120
bz &"
bz I
bz }
bz !"
bz 5"
1O
1U
#130
bz z
bz F
bz x
bz |
b10 r
1m
1B
1`
13
0O
0U
#140
b1 z
b1 F
b1 x
b1 |
b1 u
b1 H
b1 s
b1 y
1O
1U
#150
b100 r
0m
0B
0`
03
1Z
1-
0O
0U
#160
b10 t
bz u
bz H
bz s
bz y
1O
1U
#170
bz ."
bz -"
bz 7
bz T
bz )"
bz J"
b1000 r
1k
1@
1X
1+
0Z
0-
0O
0U
#180
b0 ."
b11 -"
b11 7
b11 T
b11 )"
b11 J"
b110000 '"
b110000 J
b110000 ~
b110000 +"
1O
1U
#190
b10000 r
1p
1E
1]
10
0k
0@
0X
0+
0O
0U
#200
b1 ?"
b1 M
b1 <"
b1 K"
bz '"
bz J
bz ~
bz +"
b1 9"
b1 '
b1 3"
b1 :"
1O
1U
#210
bz 6"
bz $
bz 0"
bz H"
b100000 r
0p
0E
1^
11
0]
00
1h
1=
0O
0U
#220
b0 6"
b0 $
b0 0"
b0 H"
b0 E"
b0 (
b0 4"
b0 A"
1O
1U
#230
bz D"
bz )
bz B"
bz I"
b1 r
1a
14
0^
01
1j
1?
0h
0=
0O
0U
#240
b1 D"
b1 )
b1 B"
b1 I"
b1 >"
b1 N
b1 ="
b1 C"
1O
1U
#250
bz z
bz F
bz x
bz |
b10 r
0a
04
0j
0?
1m
1B
1`
13
0O
0U
#260
b10 z
b10 F
b10 x
b10 |
b10 u
b10 H
b10 s
b10 y
1O
1U
#270
b100 r
0m
0B
0`
03
1Z
1-
0O
0U
#280
b11 t
bz u
bz H
bz s
bz y
1O
1U
#290
bz ."
bz -"
bz 7
bz T
bz )"
bz J"
b1000 r
1k
1@
1X
1+
0Z
0-
0O
0U
#300
b1010 ."
b111 -"
b111 7
b111 T
b111 )"
b111 J"
b1111010 '"
b1111010 J
b1111010 ~
b1111010 +"
1O
1U
#310
b1001 z
b1001 F
b1001 x
b1001 |
b10000 r
1_
12
0k
0@
0X
0+
1l
1A
0O
0U
#320
b1010 z
b1010 F
b1010 x
b1010 |
bz '"
bz J
bz ~
bz +"
b1010 ,"
b1010 8
b1010 w
b1010 *"
1O
1U
#330
bz 6"
bz $
bz 0"
bz H"
b100000 r
1g
1<
0_
02
1W
1*
0l
0A
0O
0U
#340
b11 6"
b11 $
b11 0"
b11 H"
b11 &"
b11 I
b11 }
b11 !"
b11 5"
1O
1U
#350
b1 r
0g
0<
0W
0*
0O
0U
#360
bz &"
bz I
bz }
bz !"
bz 5"
1O
1U
#370
bz z
bz F
bz x
bz |
b10 r
1m
1B
1`
13
0O
0U
#380
b11 z
b11 F
b11 x
b11 |
b11 u
b11 H
b11 s
b11 y
1O
1U
#390
b100 r
0m
0B
0`
03
1Z
1-
0O
0U
#400
b100 t
bz u
bz H
bz s
bz y
1O
1U
#410
bz ."
bz -"
bz 7
bz T
bz )"
bz J"
b1000 r
1k
1@
1X
1+
0Z
0-
0O
0U
#420
b10 M"
1L"
1#
1S"
b10 T"
b1110 Q"
1R"
b1 P"
b11 O"
b0 ."
b10 -"
b10 7
b10 T
b10 )"
b10 J"
b100000 '"
b100000 J
b100000 ~
b100000 +"
1O
1U
#430
b10000 r
1b
15
0k
0@
0X
0+
0O
0U
#440
bz '"
bz J
bz ~
bz +"
b10 N"
b10 "
b10 @"
b10 G"
b10 !
b10 /"
b10 F"
1O
1U
#450
b1 M"
b1 T"
b10 O"
b10 6"
b10 $
b10 0"
b10 H"
b100000 r
1e
1:
0b
05
0O
0U
#460
1O
1U
#470
b1 r
0e
0:
0O
0U
#480
1O
1U
#490
bz z
bz F
bz x
bz |
b10 r
1m
1B
1`
13
0O
0U
#500
b100 z
b100 F
b100 x
b100 |
b100 u
b100 H
b100 s
b100 y
1O
1U
#510
b100 r
0m
0B
0`
03
1Z
1-
0O
0U
#520
b101 t
bz u
bz H
bz s
bz y
1O
1U
#530
bz ."
bz -"
bz 7
bz T
bz )"
bz J"
b1000 r
1k
1@
1X
1+
0Z
0-
0O
0U
