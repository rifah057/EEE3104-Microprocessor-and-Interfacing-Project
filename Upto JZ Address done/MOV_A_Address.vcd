$date
	Mon Mar 29 14:28:11 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MOV_A_Address_tb $end
$var wire 4 ! ALU_to_A [3:0] $end
$var wire 4 " ALU_to_B [3:0] $end
$var wire 4 # A_to_ALU [3:0] $end
$var wire 4 $ A_to_OUT [3:0] $end
$var wire 4 % A_to_RAM [3:0] $end
$var wire 4 & A_to_TMP [3:0] $end
$var wire 4 ' B_to_A [3:0] $end
$var wire 4 ( B_to_ALU [3:0] $end
$var wire 1 ) Carry_from_A $end
$var wire 1 * Carry_from_ALU $end
$var wire 1 + Carry_from_B $end
$var wire 1 , Carry_to_Reg $end
$var wire 1 - Cea $end
$var wire 1 . Cei $end
$var wire 1 / Cetmp $end
$var wire 1 0 Cp $end
$var wire 1 1 EaCarry $end
$var wire 1 2 EaOut $end
$var wire 1 3 EaRAM $end
$var wire 1 4 Eatmp $end
$var wire 1 5 Eba $end
$var wire 1 6 Ecf $end
$var wire 1 7 Ei $end
$var wire 1 8 Ejmp $end
$var wire 1 9 Ep $end
$var wire 1 : Ercl $end
$var wire 1 ; Etmpb $end
$var wire 1 < Eu $end
$var wire 1 = HLT $end
$var wire 4 > IR_operand [3:0] $end
$var wire 4 ? IR_to_Control [3:0] $end
$var wire 1 @ LA $end
$var wire 1 A LaALU $end
$var wire 1 B LaOUT $end
$var wire 1 C LaRam $end
$var wire 1 D Lab $end
$var wire 1 E LbALU $end
$var wire 1 F Lbtmp $end
$var wire 1 G Lcarry $end
$var wire 1 H LcarryA $end
$var wire 1 I Lcf $end
$var wire 1 J Li $end
$var wire 1 K Lmi $end
$var wire 1 L Lmp $end
$var wire 1 M Lo $end
$var wire 1 N LtmpRAM $end
$var wire 1 O Ltmpa $end
$var wire 1 P Lzf $end
$var wire 4 Q MAR_to_RAM [3:0] $end
$var wire 4 R OUT_to_disp [3:0] $end
$var wire 4 S PC_to_MAR [3:0] $end
$var wire 4 T RAM_to_A [3:0] $end
$var wire 8 U RAM_to_IR [7:0] $end
$var wire 4 V RAM_to_TMP [3:0] $end
$var wire 1 W Su $end
$var wire 4 X TMP_to_ALU [3:0] $end
$var wire 4 Y TMP_to_B [3:0] $end
$var wire 1 Z Z_from_ALU $end
$var reg 1 [ clk $end
$var reg 4 \ input_address [3:0] $end
$var reg 1 ] input_mode $end
$var reg 8 ^ input_program [7:0] $end
$var reg 1 _ reset $end
$scope module example_tbCS $end
$var wire 4 ` IR_to_Control [3:0] $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 1 c Cea $end
$var reg 1 d Cei $end
$var reg 1 e Cetmp $end
$var reg 1 f Cp $end
$var reg 1 g EaCarry $end
$var reg 1 h EaOut $end
$var reg 1 i EaRAM $end
$var reg 1 j Eatmp $end
$var reg 1 k Eba $end
$var reg 1 l Ecf $end
$var reg 1 m Ei $end
$var reg 1 n Ejmp $end
$var reg 1 o Ep $end
$var reg 1 p Ercl $end
$var reg 1 q Etmpb $end
$var reg 1 r Eu $end
$var reg 1 s HLT $end
$var reg 1 t LA $end
$var reg 1 u LaALU $end
$var reg 1 v LaOUT $end
$var reg 1 w LaRam $end
$var reg 1 x Lab $end
$var reg 1 y LbALU $end
$var reg 1 z Lbtmp $end
$var reg 1 { Lcarry $end
$var reg 1 | LcarryA $end
$var reg 1 } Lcf $end
$var reg 1 ~ Li $end
$var reg 1 !" Lmi $end
$var reg 1 "" Lmp $end
$var reg 1 #" Lo $end
$var reg 1 $" LtmpRAM $end
$var reg 1 %" Ltmpa $end
$var reg 1 &" Lzf $end
$var reg 1 '" Su $end
$var reg 6 (" counter_state [5:0] $end
$upscope $end
$scope module example_tbPC $end
$var wire 1 0 Cp $end
$var wire 1 8 Ejmp $end
$var wire 1 9 Ep $end
$var wire 1 = HLT $end
$var wire 4 )" IR_operand [3:0] $end
$var wire 4 *" PC_to_MAR [3:0] $end
$var wire 1 Z Z_from_ALU $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 4 +" count [3:0] $end
$var reg 4 ," count_buffer [3:0] $end
$var reg 1 -" first $end
$upscope $end
$scope module example_tbMAR $end
$var wire 4 ." IR_to_MAR [3:0] $end
$var wire 1 K Lmi $end
$var wire 1 L Lmp $end
$var wire 4 /" MAR_to_RAM [3:0] $end
$var wire 4 0" PC_to_MAR [3:0] $end
$var wire 1 a clk $end
$var reg 4 1" address [3:0] $end
$upscope $end
$scope module example_tbRAMRAM $end
$var wire 4 2" A_to_RAM [3:0] $end
$var wire 1 - Cea $end
$var wire 1 . Cei $end
$var wire 1 / Cetmp $end
$var wire 1 @ LA $end
$var wire 4 3" MAR_to_RAM [3:0] $end
$var wire 4 4" RAM_to_A [3:0] $end
$var wire 8 5" RAM_to_IR [7:0] $end
$var wire 4 6" RAM_to_TMP [3:0] $end
$var wire 1 a clk $end
$var wire 4 7" input_address [3:0] $end
$var wire 1 8" input_mode $end
$var wire 8 9" input_program [7:0] $end
$var integer 32 :" address [31:0] $end
$var reg 4 ;" dataA [3:0] $end
$var reg 8 <" dataIR [7:0] $end
$var reg 4 =" dataTMP [3:0] $end
$upscope $end
$scope module example_tbIR $end
$var wire 1 7 Ei $end
$var wire 4 >" IR_operand [3:0] $end
$var wire 4 ?" IR_to_Control [3:0] $end
$var wire 1 J Li $end
$var wire 8 @" RAM_to_IR [7:0] $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 4 A" address_field [3:0] $end
$var reg 4 B" opcode [3:0] $end
$var reg 4 C" operand [3:0] $end
$upscope $end
$scope module example_tbAR $end
$var wire 4 D" ALU_to_A [3:0] $end
$var wire 4 E" A_to_ALU [3:0] $end
$var wire 4 F" A_to_OUT [3:0] $end
$var wire 4 G" A_to_RAM [3:0] $end
$var wire 4 H" A_to_TMP [3:0] $end
$var wire 4 I" B_to_A [3:0] $end
$var wire 1 ) Carry_from_A $end
$var wire 1 1 EaCarry $end
$var wire 1 2 EaOut $end
$var wire 1 3 EaRAM $end
$var wire 1 4 Eatmp $end
$var wire 1 A LaALU $end
$var wire 1 C LaRam $end
$var wire 1 D Lab $end
$var wire 4 J" RAM_to_A [3:0] $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 1 K" carry $end
$var reg 4 L" dataA [3:0] $end
$var reg 4 M" dataOut [3:0] $end
$var reg 4 N" dataRAM [3:0] $end
$var reg 4 O" dataTMP [3:0] $end
$upscope $end
$scope module example_tbTMPR $end
$var wire 4 P" A_to_TMP [3:0] $end
$var wire 1 ; Etmpb $end
$var wire 1 N LtmpRAM $end
$var wire 1 O Ltmpa $end
$var wire 4 Q" RAM_to_TMP [3:0] $end
$var wire 4 R" TMP_to_ALU [3:0] $end
$var wire 4 S" TMP_to_B [3:0] $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 4 T" dataOut [3:0] $end
$var reg 4 U" dataTMP [3:0] $end
$upscope $end
$scope module example_tbBR $end
$var wire 4 V" ALU_to_B [3:0] $end
$var wire 4 W" B_to_A [3:0] $end
$var wire 4 X" B_to_ALU [3:0] $end
$var wire 1 + Carry_from_B $end
$var wire 1 , Carry_to_Reg $end
$var wire 1 5 Eba $end
$var wire 1 : Ercl $end
$var wire 1 E LbALU $end
$var wire 1 F Lbtmp $end
$var wire 1 G Lcarry $end
$var wire 4 Y" TMP_to_B [3:0] $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 1 Z" CB $end
$var reg 1 [" Carry $end
$var reg 4 \" dataB [3:0] $end
$var reg 4 ]" dataOut [3:0] $end
$upscope $end
$scope module example_tbALU $end
$var wire 4 ^" ALU_to_A [3:0] $end
$var wire 4 _" ALU_to_B [3:0] $end
$var wire 4 `" A_to_ALU [3:0] $end
$var wire 4 a" B_to_ALU [3:0] $end
$var wire 1 * Carry_from_ALU $end
$var wire 1 < Eu $end
$var wire 4 b" IR_to_Control [3:0] $end
$var wire 4 c" TMP_to_ALU [3:0] $end
$var wire 1 Z Z_from_ALU $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 1 d" carry_flag $end
$var reg 1 e" cy $end
$var reg 4 f" result [3:0] $end
$var reg 4 g" resultOut [3:0] $end
$var reg 1 h" zero_flag $end
$var reg 1 i" zz $end
$scope task add_sub $end
$var reg 4 j" A [3:0] $end
$var reg 4 k" B [3:0] $end
$var reg 4 l" BB [3:0] $end
$var reg 1 m" Carryin $end
$var reg 1 n" Carryout $end
$var reg 4 o" Sum [3:0] $end
$upscope $end
$upscope $end
$scope module example_tbFlag $end
$var wire 1 ) Carry_from_A $end
$var wire 1 * Carry_from_ALU $end
$var wire 1 + Carry_from_B $end
$var wire 1 , Carry_to_Reg $end
$var wire 1 6 Ecf $end
$var wire 1 : Ercl $end
$var wire 1 H LcarryA $end
$var wire 1 I Lcf $end
$var wire 1 P Lzf $end
$var wire 1 Z Z_from_ALU $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 1 p" carry $end
$var reg 1 q" cy $end
$var reg 1 r" zero $end
$var reg 1 s" zz $end
$upscope $end
$scope module example_tbOUTR $end
$var wire 4 t" A_to_OUT [3:0] $end
$var wire 1 B LaOUT $end
$var wire 4 u" OUT_to_disp [3:0] $end
$var wire 1 a clk $end
$var wire 1 b reset $end
$var reg 4 v" dataDisp [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx v"
bx u"
bx t"
xs"
xr"
xq"
xp"
bx o"
xn"
xm"
bx l"
bx k"
bx j"
xi"
xh"
bx g"
bx f"
0e"
0d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
x["
xZ"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bz Q"
bx P"
bx O"
bx N"
bx M"
bx L"
xK"
bz J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bz @"
bx ?"
bx >"
bz ="
bz <"
bz ;"
b10000 :"
bx 9"
x8"
bx 7"
bz 6"
bz 5"
bz 4"
b0 3"
bx 2"
b0 1"
bz 0"
b0 /"
bx ."
0-"
bz ,"
b0 +"
bz *"
bx )"
bx ("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
1b
1a
bx `
1_
bx ^
x]
bx \
1[
xZ
bx Y
bx X
xW
bz V
bz U
bz T
bz S
bx R
b0 Q
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
bx ?
bx >
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
0*
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
bz A"
bz >
bz )"
bz ."
bz >"
bz C"
bz B"
bz ?
bz `
bz ?"
bz b"
bz M"
bz $
bz F"
bz t"
bz N"
bz %
bz 2"
bz G"
bz O"
bz &
bz H"
bz P"
bz L"
bz #
bz E"
bz `"
bz T"
bz Y
bz S"
bz Y"
bz U"
bz X
bz R"
bz c"
bz ]"
bz '
bz I"
bz W"
b0 \"
b0 (
b0 X"
b0 a"
zd"
zh"
bz g"
bz "
bz V"
bz _"
bz !
bz D"
bz ^"
bz v"
bz R
bz u"
0s
0=
b1 ("
0_
0b
#2
1]
18"
1_
1b
#3
b1011 ^
b1011 9"
b1001 \
b1001 7"
#4
b1010 \
b1010 7"
#5
b1111001 ^
b1111001 9"
b0 \
b0 7"
#6
b110000 ^
b110000 9"
b1 \
b1 7"
#7
b1111010 ^
b1111010 9"
b10 \
b10 7"
#8
b100000 ^
b100000 9"
b11 \
b11 7"
#9
b10110110 ^
b10110110 9"
b100 \
b100 7"
#10
bz 1"
bz Q
bz /"
bz 3"
b10 ("
0n
08
0|
0H
0g
01
0}
0I
0&"
0P
0p
0:
0{
0G
0l
06
0h
02
0v
0B
0y
0E
0e
0/
0$"
0N
0t
0@
0i
03
0u
0A
0q
0;
0%"
0O
0#"
0M
0k
05
0z
0F
0r
0<
0'"
0W
0j
04
0x
0D
0w
0C
0m
07
0~
0J
0c
0-
0d
0.
0!"
0K
1""
1L
1o
19
0f
00
b1000000 ^
b1000000 9"
b101 \
b101 7"
0[
0a
#11
b10000 ^
b10000 9"
b110 \
b110 7"
#12
0]
08"
#20
b0 1"
b0 Q
b0 /"
b0 3"
b0 ,"
b0 S
b0 *"
b0 0"
1[
1a
#30
b100 ("
0""
0L
0o
09
1f
10
0[
0a
#40
b1 +"
bz ,"
bz S
bz *"
bz 0"
1[
1a
#50
b1000 ("
1~
1J
1d
1.
0f
00
0[
0a
#60
b1001 C"
b111 B"
b111 ?
b111 `
b111 ?"
b111 b"
b1111001 <"
b1111001 U
b1111001 5"
b1111001 @"
1[
1a
#70
bz 1"
bz Q
bz /"
bz 3"
b10000 ("
1m
17
0~
0J
0d
0.
1!"
1K
0[
0a
#80
b1001 1"
b1001 Q
b1001 /"
b1001 3"
bz <"
bz U
bz 5"
bz @"
b1001 A"
b1001 >
b1001 )"
b1001 ."
b1001 >"
1[
1a
#90
b100000 ("
1w
1C
0m
07
1c
1-
0!"
0K
0[
0a
#100
b1011 L"
b1011 #
b1011 E"
b1011 `"
b1011 ;"
b1011 T
b1011 4"
b1011 6"
b1011 J"
1[
1a
#110
b1 ("
0w
0C
0c
0-
0[
0a
#120
bz ;"
bz T
bz 4"
bz 6"
bz J"
1[
1a
#130
bz 1"
bz Q
bz /"
bz 3"
b10 ("
1""
1L
1o
19
0[
0a
#140
b1 1"
b1 Q
b1 /"
b1 3"
b1 ,"
b1 S
b1 *"
b1 0"
1[
1a
#150
b100 ("
0""
0L
0o
09
1f
10
0[
0a
#160
b10 +"
bz ,"
bz S
bz *"
bz 0"
1[
1a
#170
bz C"
bz B"
bz ?
bz `
bz ?"
bz b"
b1000 ("
1~
1J
1d
1.
0f
00
0[
0a
#180
b0 C"
b11 B"
b11 ?
b11 `
b11 ?"
b11 b"
b110000 <"
b110000 U
b110000 5"
b110000 @"
1[
1a
#190
b10000 ("
1%"
1O
1j
14
0~
0J
0d
0.
0[
0a
#200
b1011 U"
b1011 X
b1011 R"
b1011 c"
bz <"
bz U
bz 5"
bz @"
b1011 O"
b1011 &
b1011 H"
b1011 P"
1[
1a
#210
bz L"
bz #
bz E"
bz `"
b100000 ("
0%"
0O
1k
15
0j
04
1x
1D
0[
0a
#220
b0 L"
b0 #
b0 E"
b0 `"
b0 ]"
b0 '
b0 I"
b0 W"
1[
1a
#230
bz \"
bz (
bz X"
bz a"
b1 ("
1q
1;
0k
05
1z
1F
0x
0D
0[
0a
#240
b1011 \"
b1011 (
b1011 X"
b1011 a"
b1011 T"
b1011 Y
b1011 S"
b1011 Y"
1[
1a
#250
bz 1"
bz Q
bz /"
bz 3"
b10 ("
0q
0;
0z
0F
1""
1L
1o
19
0[
0a
#260
b10 1"
b10 Q
b10 /"
b10 3"
b10 ,"
b10 S
b10 *"
b10 0"
1[
1a
#270
b100 ("
0""
0L
0o
09
1f
10
0[
0a
#280
b11 +"
bz ,"
bz S
bz *"
bz 0"
1[
1a
#290
bz C"
bz B"
bz ?
bz `
bz ?"
bz b"
b1000 ("
1~
1J
1d
1.
0f
00
0[
0a
#300
b1010 C"
b111 B"
b111 ?
b111 `
b111 ?"
b111 b"
b1111010 <"
b1111010 U
b1111010 5"
b1111010 @"
1[
1a
#310
b1001 1"
b1001 Q
b1001 /"
b1001 3"
b10000 ("
1m
17
0~
0J
0d
0.
1!"
1K
0[
0a
#320
b1010 1"
b1010 Q
b1010 /"
b1010 3"
bz <"
bz U
bz 5"
bz @"
b1010 A"
b1010 >
b1010 )"
b1010 ."
b1010 >"
1[
1a
#330
bz L"
bz #
bz E"
bz `"
b100000 ("
1w
1C
0m
07
1c
1-
0!"
0K
0[
0a
#340
b1011 L"
b1011 #
b1011 E"
b1011 `"
b1011 ;"
b1011 T
b1011 4"
b1011 6"
b1011 J"
1[
1a
#350
b1 ("
0w
0C
0c
0-
0[
0a
#360
bz ;"
bz T
bz 4"
bz 6"
bz J"
1[
1a
#370
bz 1"
bz Q
bz /"
bz 3"
b10 ("
1""
1L
1o
19
0[
0a
#380
b11 1"
b11 Q
b11 /"
b11 3"
b11 ,"
b11 S
b11 *"
b11 0"
1[
1a
#390
b100 ("
0""
0L
0o
09
1f
10
0[
0a
#400
b100 +"
bz ,"
bz S
bz *"
bz 0"
1[
1a
#410
bz C"
bz B"
bz ?
bz `
bz ?"
bz b"
b1000 ("
1~
1J
1d
1.
0f
00
0[
0a
#420
1h"
b0 f"
1d"
1n"
b0 o"
b100 l"
1m"
b1011 k"
b1011 j"
b0 C"
b10 B"
b10 ?
b10 `
b10 ?"
b10 b"
b100000 <"
b100000 U
b100000 5"
b100000 @"
1[
1a
#430
0q"
b10000 ("
1}
1I
1&"
1P
1r
1<
0~
0J
0d
0.
0[
0a
#440
1q"
1s"
bz <"
bz U
bz 5"
bz @"
1e"
1*
1i"
1Z
b0 g"
b0 "
b0 V"
b0 _"
b0 !
b0 D"
b0 ^"
1[
1a
#450
0h"
b101 f"
0d"
0n"
b101 o"
b0 j"
b0 L"
b0 #
b0 E"
b0 `"
b100000 ("
0}
0I
0&"
0P
1u
1A
0r
0<
0[
0a
#460
1[
1a
#470
b1 ("
0u
0A
0[
0a
#480
1[
1a
#490
bz 1"
bz Q
bz /"
bz 3"
b10 ("
1""
1L
1o
19
0[
0a
#500
b100 1"
b100 Q
b100 /"
b100 3"
b100 ,"
b100 S
b100 *"
b100 0"
1[
1a
#510
b100 ("
0""
0L
0o
09
1f
10
0[
0a
#520
b101 +"
bz ,"
bz S
bz *"
bz 0"
1[
1a
#530
bz C"
bz B"
bz ?
bz `
bz ?"
bz b"
b1000 ("
1~
1J
1d
1.
0f
00
0[
0a
#540
b110 C"
b1011 B"
b1011 ?
b1011 `
b1011 ?"
b1011 b"
b10110110 <"
b10110110 U
b10110110 5"
b10110110 @"
1[
1a
#550
b10000 ("
1m
17
0~
0J
0d
0.
0[
0a
#560
bz <"
bz U
bz 5"
bz @"
b110 A"
b110 >
b110 )"
b110 ."
b110 >"
1[
1a
#570
b100000 ("
1n
18
0m
07
0[
0a
#580
b110 +"
1[
1a
#590
b1 ("
0n
08
0[
0a
#600
1[
1a
#610
bz 1"
bz Q
bz /"
bz 3"
b10 ("
1""
1L
1o
19
0[
0a
#620
b110 1"
b110 Q
b110 /"
b110 3"
b110 ,"
b110 S
b110 *"
b110 0"
1[
1a
#630
b100 ("
0""
0L
0o
09
1f
10
0[
0a
#640
b111 +"
bz ,"
bz S
bz *"
bz 0"
1[
1a
#650
bz C"
bz B"
bz ?
bz `
bz ?"
bz b"
b1000 ("
1~
1J
1d
1.
0f
00
0[
0a
#660
b1011 f"
b1011 o"
b1011 l"
0m"
b0 C"
b1 B"
b1 ?
b1 `
b1 ?"
b1 b"
b10000 <"
b10000 U
b10000 5"
b10000 @"
1[
1a
#670
b10000 ("
1}
1I
1&"
1P
1r
1<
0~
0J
0d
0.
0[
0a
#680
0q"
0s"
bz <"
bz U
bz 5"
bz @"
0e"
0*
0i"
0Z
b1011 g"
b1011 "
b1011 V"
b1011 _"
b1011 !
b1011 D"
b1011 ^"
1[
1a
#690
b110 f"
1d"
1n"
b110 o"
b1011 j"
b1011 L"
b1011 #
b1011 E"
b1011 `"
b100000 ("
0}
0I
0&"
0P
1u
1A
0r
0<
0[
0a
#700
1[
1a
