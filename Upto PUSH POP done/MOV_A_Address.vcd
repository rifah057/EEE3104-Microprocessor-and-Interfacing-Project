$date
	Mon Mar 29 16:27:08 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MOV_A_Address_tb $end
$var wire 4 ! ALU_to_A [3:0] $end
$var wire 4 " ALU_to_B [3:0] $end
$var wire 4 # A_to_ALU [3:0] $end
$var wire 4 $ A_to_OUT [3:0] $end
$var wire 4 % A_to_RAM [3:0] $end
$var wire 4 & A_to_TMP [3:0] $end
$var wire 4 ' B_to_A [3:0] $end
$var wire 4 ( B_to_ALU [3:0] $end
$var wire 4 ) B_to_RAM [3:0] $end
$var wire 1 * Carry_from_A $end
$var wire 1 + Carry_from_ALU $end
$var wire 1 , Carry_from_B $end
$var wire 1 - Carry_to_Reg $end
$var wire 1 . Cea $end
$var wire 1 / Cei $end
$var wire 1 0 Cetmp $end
$var wire 1 1 Cp $end
$var wire 1 2 EaCarry $end
$var wire 1 3 EaOut $end
$var wire 1 4 EaRAM $end
$var wire 1 5 Eatmp $end
$var wire 1 6 Eba $end
$var wire 1 7 Ecf $end
$var wire 1 8 Ei $end
$var wire 1 9 Ejmp $end
$var wire 1 : Ep $end
$var wire 1 ; Epop $end
$var wire 1 < Epush $end
$var wire 1 = Ercl $end
$var wire 1 > Etmpb $end
$var wire 1 ? Eu $end
$var wire 1 @ HLT $end
$var wire 4 A IR_operand [3:0] $end
$var wire 4 B IR_to_Control [3:0] $end
$var wire 1 C LA $end
$var wire 1 D LaALU $end
$var wire 1 E LaOUT $end
$var wire 1 F LaRam $end
$var wire 1 G Lab $end
$var wire 1 H LbALU $end
$var wire 1 I Lbtmp $end
$var wire 1 J Lcarry $end
$var wire 1 K LcarryA $end
$var wire 1 L Lcf $end
$var wire 1 M Li $end
$var wire 1 N Lmi $end
$var wire 1 O Lmp $end
$var wire 1 P Lo $end
$var wire 1 Q Lpop $end
$var wire 1 R Lpush $end
$var wire 1 S LtmpRAM $end
$var wire 1 T Ltmpa $end
$var wire 1 U Lzf $end
$var wire 4 V MAR_to_RAM [3:0] $end
$var wire 4 W OUT_to_disp [3:0] $end
$var wire 4 X PC_to_MAR [3:0] $end
$var wire 4 Y RAM_to_A [3:0] $end
$var wire 4 Z RAM_to_B [3:0] $end
$var wire 8 [ RAM_to_IR [7:0] $end
$var wire 4 \ RAM_to_TMP [3:0] $end
$var wire 1 ] Su $end
$var wire 4 ^ TMP_to_ALU [3:0] $end
$var wire 4 _ TMP_to_B [3:0] $end
$var wire 1 ` Z_from_ALU $end
$var wire 1 a popstack $end
$var wire 1 b pushstack $end
$var reg 1 c clk $end
$var reg 4 d input_address [3:0] $end
$var reg 1 e input_mode $end
$var reg 8 f input_program [7:0] $end
$var reg 1 g reset $end
$scope module example_tbCS $end
$var wire 4 h IR_to_Control [3:0] $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 1 k Cea $end
$var reg 1 l Cei $end
$var reg 1 m Cetmp $end
$var reg 1 n Cp $end
$var reg 1 o EaCarry $end
$var reg 1 p EaOut $end
$var reg 1 q EaRAM $end
$var reg 1 r Eatmp $end
$var reg 1 s Eba $end
$var reg 1 t Ecf $end
$var reg 1 u Ei $end
$var reg 1 v Ejmp $end
$var reg 1 w Ep $end
$var reg 1 x Epop $end
$var reg 1 y Epush $end
$var reg 1 z Ercl $end
$var reg 1 { Etmpb $end
$var reg 1 | Eu $end
$var reg 1 } HLT $end
$var reg 1 ~ LA $end
$var reg 1 !" LaALU $end
$var reg 1 "" LaOUT $end
$var reg 1 #" LaRam $end
$var reg 1 $" Lab $end
$var reg 1 %" LbALU $end
$var reg 1 &" Lbtmp $end
$var reg 1 '" Lcarry $end
$var reg 1 (" LcarryA $end
$var reg 1 )" Lcf $end
$var reg 1 *" Li $end
$var reg 1 +" Lmi $end
$var reg 1 ," Lmp $end
$var reg 1 -" Lo $end
$var reg 1 ." Lpop $end
$var reg 1 /" Lpush $end
$var reg 1 0" LtmpRAM $end
$var reg 1 1" Ltmpa $end
$var reg 1 2" Lzf $end
$var reg 1 3" Su $end
$var reg 6 4" counter_state [5:0] $end
$var reg 1 5" popstack $end
$var reg 1 6" pushstack $end
$upscope $end
$scope module example_tbPC $end
$var wire 1 1 Cp $end
$var wire 1 9 Ejmp $end
$var wire 1 : Ep $end
$var wire 1 @ HLT $end
$var wire 4 7" IR_operand [3:0] $end
$var wire 4 8" PC_to_MAR [3:0] $end
$var wire 1 ` Z_from_ALU $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 4 9" count [3:0] $end
$var reg 4 :" count_buffer [3:0] $end
$var reg 1 ;" first $end
$upscope $end
$scope module example_tbMAR $end
$var wire 4 <" IR_to_MAR [3:0] $end
$var wire 1 N Lmi $end
$var wire 1 O Lmp $end
$var wire 4 =" MAR_to_RAM [3:0] $end
$var wire 4 >" PC_to_MAR [3:0] $end
$var wire 1 i clk $end
$var reg 4 ?" address [3:0] $end
$upscope $end
$scope module example_tbRAMRAM $end
$var wire 4 @" A_to_RAM [3:0] $end
$var wire 4 A" B_to_RAM [3:0] $end
$var wire 1 . Cea $end
$var wire 1 / Cei $end
$var wire 1 0 Cetmp $end
$var wire 1 ; Epop $end
$var wire 1 C LA $end
$var wire 1 R Lpush $end
$var wire 4 B" MAR_to_RAM [3:0] $end
$var wire 4 C" RAM_to_A [3:0] $end
$var wire 4 D" RAM_to_B [3:0] $end
$var wire 8 E" RAM_to_IR [7:0] $end
$var wire 4 F" RAM_to_TMP [3:0] $end
$var wire 1 i clk $end
$var wire 4 G" input_address [3:0] $end
$var wire 1 H" input_mode $end
$var wire 8 I" input_program [7:0] $end
$var wire 1 a popstack $end
$var wire 1 b pushstack $end
$var reg 4 J" StackPointer [3:0] $end
$var integer 32 K" address [31:0] $end
$var reg 4 L" dataA [3:0] $end
$var reg 4 M" dataB [3:0] $end
$var reg 8 N" dataIR [7:0] $end
$var reg 4 O" dataTMP [3:0] $end
$upscope $end
$scope module example_tbIR $end
$var wire 1 8 Ei $end
$var wire 4 P" IR_operand [3:0] $end
$var wire 4 Q" IR_to_Control [3:0] $end
$var wire 1 M Li $end
$var wire 8 R" RAM_to_IR [7:0] $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 4 S" address_field [3:0] $end
$var reg 4 T" opcode [3:0] $end
$var reg 4 U" operand [3:0] $end
$upscope $end
$scope module example_tbAR $end
$var wire 4 V" ALU_to_A [3:0] $end
$var wire 4 W" A_to_ALU [3:0] $end
$var wire 4 X" A_to_OUT [3:0] $end
$var wire 4 Y" A_to_RAM [3:0] $end
$var wire 4 Z" A_to_TMP [3:0] $end
$var wire 4 [" B_to_A [3:0] $end
$var wire 1 * Carry_from_A $end
$var wire 1 2 EaCarry $end
$var wire 1 3 EaOut $end
$var wire 1 4 EaRAM $end
$var wire 1 5 Eatmp $end
$var wire 1 D LaALU $end
$var wire 1 F LaRam $end
$var wire 1 G Lab $end
$var wire 4 \" RAM_to_A [3:0] $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 1 ]" carry $end
$var reg 4 ^" dataA [3:0] $end
$var reg 4 _" dataOut [3:0] $end
$var reg 4 `" dataRAM [3:0] $end
$var reg 4 a" dataTMP [3:0] $end
$upscope $end
$scope module example_tbTMPR $end
$var wire 4 b" A_to_TMP [3:0] $end
$var wire 1 > Etmpb $end
$var wire 1 S LtmpRAM $end
$var wire 1 T Ltmpa $end
$var wire 4 c" RAM_to_TMP [3:0] $end
$var wire 4 d" TMP_to_ALU [3:0] $end
$var wire 4 e" TMP_to_B [3:0] $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 4 f" dataOut [3:0] $end
$var reg 4 g" dataTMP [3:0] $end
$upscope $end
$scope module example_tbBR $end
$var wire 4 h" ALU_to_B [3:0] $end
$var wire 4 i" B_to_A [3:0] $end
$var wire 4 j" B_to_ALU [3:0] $end
$var wire 4 k" B_to_RAM [3:0] $end
$var wire 1 , Carry_from_B $end
$var wire 1 - Carry_to_Reg $end
$var wire 1 6 Eba $end
$var wire 1 < Epush $end
$var wire 1 = Ercl $end
$var wire 1 H LbALU $end
$var wire 1 I Lbtmp $end
$var wire 1 J Lcarry $end
$var wire 1 Q Lpop $end
$var wire 4 l" RAM_to_B [3:0] $end
$var wire 4 m" TMP_to_B [3:0] $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 1 n" CB $end
$var reg 1 o" Carry $end
$var reg 4 p" dataB [3:0] $end
$var reg 4 q" dataBtoA [3:0] $end
$var reg 4 r" dataBtoRAM [3:0] $end
$upscope $end
$scope module example_tbALU $end
$var wire 4 s" ALU_to_A [3:0] $end
$var wire 4 t" ALU_to_B [3:0] $end
$var wire 4 u" A_to_ALU [3:0] $end
$var wire 4 v" B_to_ALU [3:0] $end
$var wire 1 + Carry_from_ALU $end
$var wire 1 ? Eu $end
$var wire 4 w" IR_to_Control [3:0] $end
$var wire 4 x" TMP_to_ALU [3:0] $end
$var wire 1 ` Z_from_ALU $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 1 y" carry_flag $end
$var reg 1 z" cy $end
$var reg 4 {" result [3:0] $end
$var reg 4 |" resultOut [3:0] $end
$var reg 1 }" zero_flag $end
$var reg 1 ~" zz $end
$scope task add_sub $end
$var reg 4 !# A [3:0] $end
$var reg 4 "# B [3:0] $end
$var reg 4 ## BB [3:0] $end
$var reg 1 $# Carryin $end
$var reg 1 %# Carryout $end
$var reg 4 &# Sum [3:0] $end
$upscope $end
$upscope $end
$scope module example_tbFlag $end
$var wire 1 * Carry_from_A $end
$var wire 1 + Carry_from_ALU $end
$var wire 1 , Carry_from_B $end
$var wire 1 - Carry_to_Reg $end
$var wire 1 7 Ecf $end
$var wire 1 = Ercl $end
$var wire 1 K LcarryA $end
$var wire 1 L Lcf $end
$var wire 1 U Lzf $end
$var wire 1 ` Z_from_ALU $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 1 '# carry $end
$var reg 1 (# cy $end
$var reg 1 )# zero $end
$var reg 1 *# zz $end
$upscope $end
$scope module example_tbOUTR $end
$var wire 4 +# A_to_OUT [3:0] $end
$var wire 1 E LaOUT $end
$var wire 4 ,# OUT_to_disp [3:0] $end
$var wire 1 i clk $end
$var wire 1 j reset $end
$var reg 4 -# dataDisp [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -#
bx ,#
bx +#
x*#
x)#
x(#
x'#
bx &#
x%#
x$#
bx ##
bx "#
bx !#
x~"
x}"
bx |"
bx {"
0z"
0y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
xo"
xn"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bz c"
bx b"
bx a"
bx `"
bx _"
bx ^"
x]"
bz \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bz R"
bx Q"
bx P"
bz O"
bz N"
bx M"
bz L"
b10000 K"
b1111 J"
bx I"
xH"
bx G"
bz F"
bz E"
bx D"
bz C"
b0 B"
bx A"
bx @"
b0 ?"
bz >"
b0 ="
bx <"
0;"
bz :"
b0 9"
bz 8"
bx 7"
x6"
x5"
bx 4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
1j
1i
bx h
1g
bx f
xe
bx d
1c
xb
xa
x`
bx _
bx ^
x]
bz \
bz [
bx Z
bz Y
bz X
bx W
b0 V
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
bx B
bx A
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
0+
x*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
bz S"
bz A
bz 7"
bz <"
bz P"
bz U"
bz T"
bz B
bz h
bz Q"
bz w"
bz _"
bz $
bz X"
bz +#
bz `"
bz %
bz @"
bz Y"
bz a"
bz &
bz Z"
bz b"
bz ^"
bz #
bz W"
bz u"
bz f"
bz _
bz e"
bz m"
bz g"
bz ^
bz d"
bz x"
bz r"
bz )
bz A"
bz k"
bz q"
bz '
bz ["
bz i"
b0 p"
b0 (
b0 j"
b0 v"
zy"
z}"
bz |"
bz "
bz h"
bz t"
bz !
bz V"
bz s"
bz -#
bz W
bz ,#
0}
0@
b1 4"
0g
0j
#2
1e
1H"
1g
1j
#3
b1010 f
b1010 I"
b1001 d
b1001 G"
#4
b1011 f
b1011 I"
b1010 d
b1010 G"
#5
b1111001 f
b1111001 I"
b0 d
b0 G"
#6
b110000 f
b110000 I"
b1 d
b1 G"
#7
b11000000 f
b11000000 I"
b10 d
b10 G"
#8
b1111010 f
b1111010 I"
b11 d
b11 G"
#9
b110000 f
b110000 I"
b100 d
b100 G"
#10
bz ?"
bz V
bz ="
bz B"
b10 4"
05"
0a
06"
0b
0x
0;
0."
0Q
0y
0<
0/"
0R
0v
09
0("
0K
0o
02
0)"
0L
02"
0U
0z
0=
0'"
0J
0t
07
0p
03
0""
0E
0%"
0H
0m
00
00"
0S
0~
0C
0q
04
0!"
0D
0{
0>
01"
0T
0-"
0P
0s
06
0&"
0I
0|
0?
03"
0]
0r
05
0$"
0G
0#"
0F
0u
08
0*"
0M
0k
0.
0l
0/
0+"
0N
1,"
1O
1w
1:
0n
01
b11010000 f
b11010000 I"
b101 d
b101 G"
0c
0i
#11
0e
0H"
#20
b0 ?"
b0 V
b0 ="
b0 B"
b0 :"
b0 X
b0 8"
b0 >"
1c
1i
#30
b100 4"
0,"
0O
0w
0:
1n
11
0c
0i
#40
b1 9"
bz :"
bz X
bz 8"
bz >"
1c
1i
#50
b1000 4"
1*"
1M
1l
1/
0n
01
0c
0i
#60
b1001 U"
b111 T"
b111 B
b111 h
b111 Q"
b111 w"
b1111001 N"
b1111001 [
b1111001 E"
b1111001 R"
1c
1i
#70
bz ?"
bz V
bz ="
bz B"
b10000 4"
1u
18
0*"
0M
0l
0/
1+"
1N
0c
0i
#80
b1001 ?"
b1001 V
b1001 ="
b1001 B"
bz N"
bz [
bz E"
bz R"
b1001 S"
b1001 A
b1001 7"
b1001 <"
b1001 P"
1c
1i
#90
b100000 4"
1#"
1F
0u
08
1k
1.
0+"
0N
0c
0i
#100
b1010 ^"
b1010 #
b1010 W"
b1010 u"
b1010 L"
b1010 Y
b1010 C"
b1010 \"
1c
1i
#110
b1 4"
0#"
0F
0k
0.
0c
0i
#120
bz L"
bz Y
bz C"
bz \"
1c
1i
#130
bz ?"
bz V
bz ="
bz B"
b10 4"
1,"
1O
1w
1:
0c
0i
#140
b1 ?"
b1 V
b1 ="
b1 B"
b1 :"
b1 X
b1 8"
b1 >"
1c
1i
#150
b100 4"
0,"
0O
0w
0:
1n
11
0c
0i
#160
b10 9"
bz :"
bz X
bz 8"
bz >"
1c
1i
#170
bz U"
bz T"
bz B
bz h
bz Q"
bz w"
b1000 4"
1*"
1M
1l
1/
0n
01
0c
0i
#180
b0 U"
b11 T"
b11 B
b11 h
b11 Q"
b11 w"
b110000 N"
b110000 [
b110000 E"
b110000 R"
1c
1i
#190
b10000 4"
11"
1T
1r
15
0*"
0M
0l
0/
0c
0i
#200
b1010 g"
b1010 ^
b1010 d"
b1010 x"
bz N"
bz [
bz E"
bz R"
b1010 a"
b1010 &
b1010 Z"
b1010 b"
1c
1i
#210
bz ^"
bz #
bz W"
bz u"
b100000 4"
01"
0T
1s
16
0r
05
1$"
1G
0c
0i
#220
b0 ^"
b0 #
b0 W"
b0 u"
b0 q"
b0 '
b0 ["
b0 i"
1c
1i
#230
bz p"
bz (
bz j"
bz v"
b1 4"
1{
1>
0s
06
1&"
1I
0$"
0G
0c
0i
#240
b1010 p"
b1010 (
b1010 j"
b1010 v"
b1010 f"
b1010 _
b1010 e"
b1010 m"
1c
1i
#250
bz ?"
bz V
bz ="
bz B"
b10 4"
0{
0>
0&"
0I
1,"
1O
1w
1:
0c
0i
#260
b10 ?"
b10 V
b10 ="
b10 B"
b10 :"
b10 X
b10 8"
b10 >"
1c
1i
#270
b100 4"
0,"
0O
0w
0:
1n
11
0c
0i
#280
b11 9"
bz :"
bz X
bz 8"
bz >"
1c
1i
#290
bz U"
bz T"
bz B
bz h
bz Q"
bz w"
b1000 4"
1*"
1M
1l
1/
0n
01
0c
0i
#300
b0 U"
b1100 T"
b1100 B
b1100 h
b1100 Q"
b1100 w"
b11000000 N"
b11000000 [
b11000000 E"
b11000000 R"
1c
1i
#310
b10000 4"
1y
1<
0*"
0M
0l
0/
0c
0i
#320
bz N"
bz [
bz E"
bz R"
b1010 r"
b1010 )
b1010 A"
b1010 k"
1c
1i
#330
b100000 4"
0y
0<
1/"
1R
0c
0i
#340
1c
1i
#350
b1 4"
16"
1b
0/"
0R
0c
0i
#360
b1110 J"
1c
1i
#370
bz ?"
bz V
bz ="
bz B"
b10 4"
06"
0b
1,"
1O
1w
1:
0c
0i
#380
b11 ?"
b11 V
b11 ="
b11 B"
b11 :"
b11 X
b11 8"
b11 >"
1c
1i
#390
b100 4"
0,"
0O
0w
0:
1n
11
0c
0i
#400
b100 9"
bz :"
bz X
bz 8"
bz >"
1c
1i
#410
bz U"
bz T"
bz B
bz h
bz Q"
bz w"
b1000 4"
1*"
1M
1l
1/
0n
01
0c
0i
#420
b1010 U"
b111 T"
b111 B
b111 h
b111 Q"
b111 w"
b1111010 N"
b1111010 [
b1111010 E"
b1111010 R"
1c
1i
#430
b1001 ?"
b1001 V
b1001 ="
b1001 B"
b10000 4"
1u
18
0*"
0M
0l
0/
1+"
1N
0c
0i
#440
b1010 ?"
b1010 V
b1010 ="
b1010 B"
bz N"
bz [
bz E"
bz R"
b1010 S"
b1010 A
b1010 7"
b1010 <"
b1010 P"
1c
1i
#450
bz ^"
bz #
bz W"
bz u"
b100000 4"
1#"
1F
0u
08
1k
1.
0+"
0N
0c
0i
#460
b1011 ^"
b1011 #
b1011 W"
b1011 u"
b1011 L"
b1011 Y
b1011 C"
b1011 \"
1c
1i
#470
b1 4"
0#"
0F
0k
0.
0c
0i
#480
bz L"
bz Y
bz C"
bz \"
1c
1i
#490
bz ?"
bz V
bz ="
bz B"
b10 4"
1,"
1O
1w
1:
0c
0i
#500
b100 ?"
b100 V
b100 ="
b100 B"
b100 :"
b100 X
b100 8"
b100 >"
1c
1i
#510
b100 4"
0,"
0O
0w
0:
1n
11
0c
0i
#520
b101 9"
bz :"
bz X
bz 8"
bz >"
1c
1i
#530
bz U"
bz T"
bz B
bz h
bz Q"
bz w"
b1000 4"
1*"
1M
1l
1/
0n
01
0c
0i
#540
b0 U"
b11 T"
b11 B
b11 h
b11 Q"
b11 w"
b110000 N"
b110000 [
b110000 E"
b110000 R"
1c
1i
#550
b10000 4"
11"
1T
1r
15
0*"
0M
0l
0/
0c
0i
#560
b1011 g"
b1011 ^
b1011 d"
b1011 x"
bz N"
bz [
bz E"
bz R"
b1011 a"
b1011 &
b1011 Z"
b1011 b"
1c
1i
#570
b0 ^"
b0 #
b0 W"
b0 u"
b100000 4"
01"
0T
1s
16
0r
05
1$"
1G
0c
0i
#580
b1010 ^"
b1010 #
b1010 W"
b1010 u"
b1010 q"
b1010 '
b1010 ["
b1010 i"
1c
1i
#590
b1 4"
1{
1>
0s
06
1&"
1I
0$"
0G
0c
0i
#600
b1011 p"
b1011 (
b1011 j"
b1011 v"
b1011 f"
b1011 _
b1011 e"
b1011 m"
1c
1i
#610
bz ?"
bz V
bz ="
bz B"
b10 4"
0{
0>
0&"
0I
1,"
1O
1w
1:
0c
0i
#620
b101 ?"
b101 V
b101 ="
b101 B"
b101 :"
b101 X
b101 8"
b101 >"
1c
1i
#630
b100 4"
0,"
0O
0w
0:
1n
11
0c
0i
#640
b110 9"
bz :"
bz X
bz 8"
bz >"
1c
1i
#650
bz U"
bz T"
bz B
bz h
bz Q"
bz w"
b1000 4"
1*"
1M
1l
1/
0n
01
0c
0i
#660
b0 U"
b1101 T"
b1101 B
b1101 h
b1101 Q"
b1101 w"
b11010000 N"
b11010000 [
b11010000 E"
b11010000 R"
1c
1i
#670
b10000 4"
15"
1a
0*"
0M
0l
0/
0c
0i
#680
b1111 J"
1c
1i
#690
b100000 4"
05"
0a
1x
1;
0c
0i
#700
b1010 M"
b1010 Z
b1010 D"
b1010 l"
1c
1i
#710
b1 4"
0x
0;
1."
1Q
0c
0i
#720
bz N"
bz [
bz E"
bz R"
b1010 p"
b1010 (
b1010 j"
b1010 v"
1c
1i
#730
bz ?"
bz V
bz ="
bz B"
b10 4"
0."
0Q
1,"
1O
1w
1:
0c
0i
#740
b110 ?"
b110 V
b110 ="
b110 B"
b110 :"
b110 X
b110 8"
b110 >"
1c
1i
#750
b100 4"
0,"
0O
0w
0:
1n
11
0c
0i
#760
b111 9"
bz :"
bz X
bz 8"
bz >"
1c
1i
#770
bz U"
bz T"
bz B
bz h
bz Q"
bz w"
b1000 4"
1*"
1M
1l
1/
0n
01
0c
0i
#780
b0 U"
b0 T"
b0 B
b0 h
b0 Q"
b0 w"
b0 N"
b0 [
b0 E"
b0 R"
1c
1i
#790
b10000 4"
0c
0i
#800
1c
1i
#810
b100000 4"
0c
0i
#820
1c
1i
#830
b1 4"
0c
0i
#840
1c
1i
#850
bz ?"
bz V
bz ="
bz B"
b10 4"
0*"
0M
0l
0/
1,"
1O
1w
1:
0c
0i
