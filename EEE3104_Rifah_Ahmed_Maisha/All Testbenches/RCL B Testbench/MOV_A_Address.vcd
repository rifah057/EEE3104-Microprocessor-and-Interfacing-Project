$date
	Tue Mar 30 17:47:30 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MOV_A_Address_tb $end
$var wire 4 ! ALU_to_A [3:0] $end
$var wire 4 " ALU_to_B [3:0] $end
$var wire 4 # A_to_ALU [3:0] $end
$var wire 4 $ A_to_OUT [3:0] $end
$var wire 4 % A_to_RAM [3:0] $end
$var wire 4 & A_to_TMP [3:0] $end
$var wire 4 ' B_to_A [3:0] $end
$var wire 4 ( B_to_ALU [3:0] $end
$var wire 4 ) B_to_RAM [3:0] $end
$var wire 1 * Carry_from_A $end
$var wire 1 + Carry_from_ALU $end
$var wire 1 , Carry_from_B $end
$var wire 1 - Carry_to_Reg $end
$var wire 1 . Cea $end
$var wire 1 / Cei $end
$var wire 1 0 Cetmp $end
$var wire 1 1 Cp $end
$var wire 1 2 EPC $end
$var wire 1 3 ERam $end
$var wire 1 4 EaCarry $end
$var wire 1 5 EaOut $end
$var wire 1 6 EaRAM $end
$var wire 1 7 Eatmp $end
$var wire 1 8 Eba $end
$var wire 1 9 Ecall $end
$var wire 1 : Ecf $end
$var wire 1 ; Ei $end
$var wire 1 < Ejmp $end
$var wire 1 = Ep $end
$var wire 1 > Epop $end
$var wire 1 ? Epush $end
$var wire 1 @ Ercl $end
$var wire 1 A Etmpb $end
$var wire 1 B Eu $end
$var wire 1 C HLT $end
$var wire 4 D IR_operand [3:0] $end
$var wire 4 E IR_to_Control [3:0] $end
$var wire 1 F LA $end
$var wire 1 G LPC $end
$var wire 1 H LRam $end
$var wire 1 I LaALU $end
$var wire 1 J LaOUT $end
$var wire 1 K LaRam $end
$var wire 1 L Lab $end
$var wire 1 M LbALU $end
$var wire 1 N Lbtmp $end
$var wire 1 O Lcarry $end
$var wire 1 P LcarryA $end
$var wire 1 Q Lcf $end
$var wire 1 R Li $end
$var wire 1 S Lmi $end
$var wire 1 T Lmp $end
$var wire 1 U Lpop $end
$var wire 1 V Lpush $end
$var wire 1 W LtmpRAM $end
$var wire 1 X Ltmpa $end
$var wire 1 Y Lzf $end
$var wire 4 Z MAR_to_RAM [3:0] $end
$var wire 4 [ OUT_to_disp [3:0] $end
$var wire 4 \ PC_to_MAR [3:0] $end
$var wire 4 ] PC_to_RAM [3:0] $end
$var wire 4 ^ RAM_to_A [3:0] $end
$var wire 4 _ RAM_to_B [3:0] $end
$var wire 8 ` RAM_to_IR [7:0] $end
$var wire 4 a RAM_to_PC [3:0] $end
$var wire 4 b RAM_to_TMP [3:0] $end
$var wire 4 c TMP_to_ALU [3:0] $end
$var wire 4 d TMP_to_B [3:0] $end
$var wire 1 e Z_from_ALU $end
$var wire 1 f popstack $end
$var wire 1 g pushstack $end
$var reg 1 h clk $end
$var reg 4 i input_address [3:0] $end
$var reg 1 j input_mode $end
$var reg 8 k input_program [7:0] $end
$var reg 1 l reset $end
$scope module example_tbCS $end
$var wire 4 m IR_to_Control [3:0] $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 1 p Cea $end
$var reg 1 q Cei $end
$var reg 1 r Cetmp $end
$var reg 1 s Cp $end
$var reg 1 t EPC $end
$var reg 1 u ERam $end
$var reg 1 v EaCarry $end
$var reg 1 w EaOut $end
$var reg 1 x EaRAM $end
$var reg 1 y Eatmp $end
$var reg 1 z Eba $end
$var reg 1 { Ecall $end
$var reg 1 | Ecf $end
$var reg 1 } Ei $end
$var reg 1 ~ Ejmp $end
$var reg 1 !" Ep $end
$var reg 1 "" Epop $end
$var reg 1 #" Epush $end
$var reg 1 $" Ercl $end
$var reg 1 %" Etmpb $end
$var reg 1 &" Eu $end
$var reg 1 '" HLT $end
$var reg 1 (" LA $end
$var reg 1 )" LPC $end
$var reg 1 *" LRam $end
$var reg 1 +" LaALU $end
$var reg 1 ," LaOUT $end
$var reg 1 -" LaRam $end
$var reg 1 ." Lab $end
$var reg 1 /" LbALU $end
$var reg 1 0" Lbtmp $end
$var reg 1 1" Lcarry $end
$var reg 1 2" LcarryA $end
$var reg 1 3" Lcf $end
$var reg 1 4" Li $end
$var reg 1 5" Lmi $end
$var reg 1 6" Lmp $end
$var reg 1 7" Lpop $end
$var reg 1 8" Lpush $end
$var reg 1 9" LtmpRAM $end
$var reg 1 :" Ltmpa $end
$var reg 1 ;" Lzf $end
$var reg 6 <" counter_state [5:0] $end
$var reg 1 =" popstack $end
$var reg 1 >" pushstack $end
$upscope $end
$scope module example_tbPC $end
$var wire 1 1 Cp $end
$var wire 1 3 ERam $end
$var wire 1 9 Ecall $end
$var wire 1 < Ejmp $end
$var wire 1 = Ep $end
$var wire 1 C HLT $end
$var wire 4 ?" IR_operand [3:0] $end
$var wire 1 H LRam $end
$var wire 4 @" PC_to_MAR [3:0] $end
$var wire 4 A" PC_to_RAM [3:0] $end
$var wire 4 B" RAM_to_PC [3:0] $end
$var wire 1 e Z_from_ALU $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 4 C" count [3:0] $end
$var reg 4 D" count_buffer [3:0] $end
$var reg 1 E" first $end
$var reg 4 F" ret_address [3:0] $end
$upscope $end
$scope module example_tbMAR $end
$var wire 4 G" IR_to_MAR [3:0] $end
$var wire 1 S Lmi $end
$var wire 1 T Lmp $end
$var wire 4 H" MAR_to_RAM [3:0] $end
$var wire 4 I" PC_to_MAR [3:0] $end
$var wire 1 n clk $end
$var reg 4 J" address [3:0] $end
$upscope $end
$scope module example_tbRAMRAM $end
$var wire 4 K" A_to_RAM [3:0] $end
$var wire 4 L" B_to_RAM [3:0] $end
$var wire 1 . Cea $end
$var wire 1 / Cei $end
$var wire 1 0 Cetmp $end
$var wire 1 2 EPC $end
$var wire 1 > Epop $end
$var wire 1 F LA $end
$var wire 1 G LPC $end
$var wire 1 V Lpush $end
$var wire 4 M" MAR_to_RAM [3:0] $end
$var wire 4 N" PC_to_RAM [3:0] $end
$var wire 4 O" RAM_to_A [3:0] $end
$var wire 4 P" RAM_to_B [3:0] $end
$var wire 8 Q" RAM_to_IR [7:0] $end
$var wire 4 R" RAM_to_PC [3:0] $end
$var wire 4 S" RAM_to_TMP [3:0] $end
$var wire 1 n clk $end
$var wire 4 T" input_address [3:0] $end
$var wire 1 U" input_mode $end
$var wire 8 V" input_program [7:0] $end
$var wire 1 f popstack $end
$var wire 1 g pushstack $end
$var reg 4 W" StackPointer [3:0] $end
$var integer 32 X" address [31:0] $end
$var reg 4 Y" dataA [3:0] $end
$var reg 4 Z" dataB [3:0] $end
$var reg 8 [" dataIR [7:0] $end
$var reg 4 \" dataTMP [3:0] $end
$var reg 4 ]" ret_address [3:0] $end
$upscope $end
$scope module example_tbIR $end
$var wire 1 ; Ei $end
$var wire 4 ^" IR_operand [3:0] $end
$var wire 4 _" IR_to_Control [3:0] $end
$var wire 1 R Li $end
$var wire 8 `" RAM_to_IR [7:0] $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 4 a" address_field [3:0] $end
$var reg 4 b" opcode [3:0] $end
$var reg 4 c" operand [3:0] $end
$upscope $end
$scope module example_tbAR $end
$var wire 4 d" ALU_to_A [3:0] $end
$var wire 4 e" A_to_ALU [3:0] $end
$var wire 4 f" A_to_OUT [3:0] $end
$var wire 4 g" A_to_RAM [3:0] $end
$var wire 4 h" A_to_TMP [3:0] $end
$var wire 4 i" B_to_A [3:0] $end
$var wire 1 * Carry_from_A $end
$var wire 1 4 EaCarry $end
$var wire 1 5 EaOut $end
$var wire 1 6 EaRAM $end
$var wire 1 7 Eatmp $end
$var wire 1 I LaALU $end
$var wire 1 K LaRam $end
$var wire 1 L Lab $end
$var wire 4 j" RAM_to_A [3:0] $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 1 k" carry $end
$var reg 4 l" dataA [3:0] $end
$var reg 4 m" dataOut [3:0] $end
$var reg 4 n" dataRAM [3:0] $end
$var reg 4 o" dataTMP [3:0] $end
$upscope $end
$scope module example_tbTMPR $end
$var wire 4 p" A_to_TMP [3:0] $end
$var wire 1 A Etmpb $end
$var wire 1 W LtmpRAM $end
$var wire 1 X Ltmpa $end
$var wire 4 q" RAM_to_TMP [3:0] $end
$var wire 4 r" TMP_to_ALU [3:0] $end
$var wire 4 s" TMP_to_B [3:0] $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 4 t" dataOut [3:0] $end
$var reg 4 u" dataTMP [3:0] $end
$upscope $end
$scope module example_tbBR $end
$var wire 4 v" ALU_to_B [3:0] $end
$var wire 4 w" B_to_A [3:0] $end
$var wire 4 x" B_to_ALU [3:0] $end
$var wire 4 y" B_to_RAM [3:0] $end
$var wire 1 , Carry_from_B $end
$var wire 1 - Carry_to_Reg $end
$var wire 1 8 Eba $end
$var wire 1 ? Epush $end
$var wire 1 @ Ercl $end
$var wire 1 M LbALU $end
$var wire 1 N Lbtmp $end
$var wire 1 O Lcarry $end
$var wire 1 U Lpop $end
$var wire 4 z" RAM_to_B [3:0] $end
$var wire 4 {" TMP_to_B [3:0] $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 1 |" CB $end
$var reg 1 }" Carry $end
$var reg 4 ~" dataB [3:0] $end
$var reg 4 !# dataBtoA [3:0] $end
$var reg 4 "# dataBtoRAM [3:0] $end
$upscope $end
$scope module example_tbALU $end
$var wire 4 ## ALU_to_A [3:0] $end
$var wire 4 $# ALU_to_B [3:0] $end
$var wire 4 %# A_to_ALU [3:0] $end
$var wire 4 &# B_to_ALU [3:0] $end
$var wire 1 + Carry_from_ALU $end
$var wire 1 B Eu $end
$var wire 4 '# IR_to_Control [3:0] $end
$var wire 4 (# TMP_to_ALU [3:0] $end
$var wire 1 e Z_from_ALU $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 1 )# carry_flag $end
$var reg 1 *# cy $end
$var reg 4 +# result [3:0] $end
$var reg 4 ,# resultOut [3:0] $end
$var reg 1 -# zero_flag $end
$var reg 1 .# zz $end
$scope task add_sub $end
$var reg 4 /# A [3:0] $end
$var reg 4 0# B [3:0] $end
$var reg 4 1# BB [3:0] $end
$var reg 1 2# Carryin $end
$var reg 1 3# Carryout $end
$var reg 4 4# Sum [3:0] $end
$upscope $end
$upscope $end
$scope module example_tbFlag $end
$var wire 1 * Carry_from_A $end
$var wire 1 + Carry_from_ALU $end
$var wire 1 , Carry_from_B $end
$var wire 1 - Carry_to_Reg $end
$var wire 1 : Ecf $end
$var wire 1 @ Ercl $end
$var wire 1 P LcarryA $end
$var wire 1 Q Lcf $end
$var wire 1 Y Lzf $end
$var wire 1 e Z_from_ALU $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 1 5# carry $end
$var reg 1 6# cy $end
$var reg 1 7# zero $end
$var reg 1 8# zz $end
$upscope $end
$scope module example_tbOUTR $end
$var wire 4 9# A_to_OUT [3:0] $end
$var wire 1 J LaOUT $end
$var wire 4 :# OUT_to_disp [3:0] $end
$var wire 1 n clk $end
$var wire 1 o reset $end
$var reg 4 ;# dataDisp [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;#
bx :#
bx 9#
x8#
x7#
x6#
x5#
bx 4#
x3#
x2#
bx 1#
bx 0#
bx /#
x.#
x-#
bx ,#
bx +#
0*#
0)#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
x}"
x|"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bz q"
bx p"
bx o"
bx n"
bx m"
bx l"
xk"
bz j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bz `"
bx _"
bx ^"
bx ]"
bz \"
bz ["
bx Z"
bz Y"
b10000 X"
b1111 W"
bx V"
xU"
bx T"
bz S"
bx R"
bz Q"
bx P"
bz O"
bx N"
b0 M"
bx L"
bx K"
b0 J"
bz I"
b0 H"
bx G"
bx F"
0E"
bz D"
b0 C"
bx B"
bx A"
bz @"
bx ?"
x>"
x="
bx <"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
1o
1n
bx m
1l
bx k
xj
bx i
1h
xg
xf
xe
bx d
bx c
bz b
bx a
bz `
bx _
bz ^
bx ]
bz \
bx [
b0 Z
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
bx E
bx D
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
0+
x*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
bz F"
bz ]
bz A"
bz N"
bz a"
bz D
bz ?"
bz G"
bz ^"
bz c"
bz b"
bz E
bz m
bz _"
bz '#
bz m"
bz $
bz f"
bz 9#
bz n"
bz %
bz K"
bz g"
bz o"
bz &
bz h"
bz p"
bz l"
bz #
bz e"
bz %#
bz t"
bz d
bz s"
bz {"
bz u"
bz c
bz r"
bz (#
bz "#
bz )
bz L"
bz y"
bz !#
bz '
bz i"
bz w"
b0 ~"
b0 (
b0 x"
b0 &#
0.#
0e
bz ,#
bz "
bz v"
bz $#
bz !
bz d"
bz ##
05#
0-
07#
bz ;#
bz [
bz :#
0'"
0C
b1 <"
0l
0o
#2
1j
1U"
1l
1o
#3
b111 k
b111 V"
b1001 i
b1001 T"
#4
b1010 k
b1010 V"
b1010 i
b1010 T"
#5
b1111001 k
b1111001 V"
b0 i
b0 T"
#6
b110000 k
b110000 V"
b1 i
b1 T"
#7
b1111010 k
b1111010 V"
b10 i
b10 T"
#8
b10000 k
b10000 V"
b11 i
b11 T"
#9
b1000000 k
b1000000 V"
b100 i
b100 T"
#10
bz J"
bz Z
bz H"
bz M"
b10 <"
0{
09
0t
02
0)"
0G
0u
03
0*"
0H
0="
0f
0>"
0g
0""
0>
07"
0U
0#"
0?
08"
0V
0~
0<
02"
0P
0v
04
03"
0Q
0;"
0Y
0$"
0@
01"
0O
0|
0:
0w
05
0,"
0J
0/"
0M
0r
00
09"
0W
0("
0F
0x
06
0+"
0I
0%"
0A
0:"
0X
0z
08
00"
0N
0&"
0B
0y
07
0."
0L
0-"
0K
0}
0;
04"
0R
0p
0.
0q
0/
05"
0S
16"
1T
1!"
1=
0s
01
0h
0n
#20
b0 J"
b0 Z
b0 H"
b0 M"
b0 D"
b0 \
b0 @"
b0 I"
1h
1n
#30
b100 <"
06"
0T
0!"
0=
1s
11
0h
0n
#40
b1 C"
1h
1n
#50
b1000 <"
14"
1R
1q
1/
0s
01
0h
0n
#60
b1001 c"
b111 b"
b111 E
b111 m
b111 _"
b111 '#
b1111001 ["
b1111001 `
b1111001 Q"
b1111001 `"
1h
1n
#70
bz J"
bz Z
bz H"
bz M"
b10000 <"
1}
1;
04"
0R
0q
0/
15"
1S
0h
0n
#80
b1001 J"
b1001 Z
b1001 H"
b1001 M"
bz ["
bz `
bz Q"
bz `"
b1001 a"
b1001 D
b1001 ?"
b1001 G"
b1001 ^"
1h
1n
#90
b100000 <"
1-"
1K
0}
0;
1p
1.
05"
0S
0h
0n
#100
b111 l"
b111 #
b111 e"
b111 %#
b111 Y"
b111 ^
b111 O"
b111 j"
1h
1n
#110
b1 <"
0-"
0K
0p
0.
0h
0n
#120
bz Y"
bz ^
bz O"
bz j"
1h
1n
#130
b0 J"
b0 Z
b0 H"
b0 M"
b10 <"
16"
1T
1!"
1=
0h
0n
#140
b1 J"
b1 Z
b1 H"
b1 M"
b1 D"
b1 \
b1 @"
b1 I"
1h
1n
#150
b100 <"
06"
0T
0!"
0=
1s
11
0h
0n
#160
b10 C"
1h
1n
#170
bz c"
bz b"
bz E
bz m
bz _"
bz '#
b1000 <"
14"
1R
1q
1/
0s
01
0h
0n
#180
b0 c"
b11 b"
b11 E
b11 m
b11 _"
b11 '#
b110000 ["
b110000 `
b110000 Q"
b110000 `"
1h
1n
#190
b10000 <"
1:"
1X
1y
17
04"
0R
0q
0/
0h
0n
#200
b111 u"
b111 c
b111 r"
b111 (#
bz ["
bz `
bz Q"
bz `"
b111 o"
b111 &
b111 h"
b111 p"
1h
1n
#210
bz l"
bz #
bz e"
bz %#
b100000 <"
0:"
0X
1z
18
0y
07
1."
1L
0h
0n
#220
b0 l"
b0 #
b0 e"
b0 %#
b0 !#
b0 '
b0 i"
b0 w"
1h
1n
#230
bz ~"
bz (
bz x"
bz &#
b1 <"
1%"
1A
0z
08
10"
1N
0."
0L
0h
0n
#240
b111 ~"
b111 (
b111 x"
b111 &#
b111 t"
b111 d
b111 s"
b111 {"
1h
1n
#250
b10 <"
0%"
0A
00"
0N
16"
1T
1!"
1=
0h
0n
#260
b10 J"
b10 Z
b10 H"
b10 M"
b10 D"
b10 \
b10 @"
b10 I"
1h
1n
#270
b100 <"
06"
0T
0!"
0=
1s
11
0h
0n
#280
b11 C"
1h
1n
#290
bz c"
bz b"
bz E
bz m
bz _"
bz '#
b1000 <"
14"
1R
1q
1/
0s
01
0h
0n
#300
b1010 c"
b111 b"
b111 E
b111 m
b111 _"
b111 '#
b1111010 ["
b1111010 `
b1111010 Q"
b1111010 `"
1h
1n
#310
b1001 J"
b1001 Z
b1001 H"
b1001 M"
b10000 <"
1}
1;
04"
0R
0q
0/
15"
1S
0h
0n
#320
b1010 J"
b1010 Z
b1010 H"
b1010 M"
bz ["
bz `
bz Q"
bz `"
b1010 a"
b1010 D
b1010 ?"
b1010 G"
b1010 ^"
1h
1n
#330
bz l"
bz #
bz e"
bz %#
b100000 <"
1-"
1K
0}
0;
1p
1.
05"
0S
0h
0n
#340
b1010 l"
b1010 #
b1010 e"
b1010 %#
b1010 Y"
b1010 ^
b1010 O"
b1010 j"
1h
1n
#350
b1 <"
0-"
0K
0p
0.
0h
0n
#360
bz Y"
bz ^
bz O"
bz j"
1h
1n
#370
b10 J"
b10 Z
b10 H"
b10 M"
b10 <"
16"
1T
1!"
1=
0h
0n
#380
b11 J"
b11 Z
b11 H"
b11 M"
b11 D"
b11 \
b11 @"
b11 I"
1h
1n
#390
b100 <"
06"
0T
0!"
0=
1s
11
0h
0n
#400
b100 C"
1h
1n
#410
bz c"
bz b"
bz E
bz m
bz _"
bz '#
b1000 <"
14"
1R
1q
1/
0s
01
0h
0n
#420
b0 c"
b1 b"
b1 E
b1 m
b1 _"
b1 '#
b10000 ["
b10000 `
b10000 Q"
b10000 `"
1h
1n
#430
06#
08#
b10000 <"
13"
1Q
1;"
1Y
1&"
1B
04"
0R
0q
0/
0h
0n
#440
16#
bz ["
bz `
bz Q"
bz `"
1*#
1+
b1 ,#
b1 "
b1 v"
b1 $#
b1 !
b1 d"
b1 ##
0-#
b1 +#
1)#
13#
b1 4#
b111 1#
02#
b111 0#
b1010 /#
1h
1n
#450
b100000 <"
03"
0Q
0;"
0Y
1+"
1I
0&"
0B
0h
0n
#460
b1 l"
b1 #
b1 e"
b1 %#
1h
1n
#470
b1 <"
0+"
0I
0h
0n
#480
1h
1n
#490
b10 <"
16"
1T
1!"
1=
0h
0n
#500
b100 J"
b100 Z
b100 H"
b100 M"
b100 D"
b100 \
b100 @"
b100 I"
1h
1n
#510
b100 <"
06"
0T
0!"
0=
1s
11
0h
0n
#520
b101 C"
1h
1n
#530
bz c"
bz b"
bz E
bz m
bz _"
bz '#
b1000 <"
14"
1R
1q
1/
0s
01
0h
0n
#540
b0 c"
b100 b"
b100 E
b100 m
b100 _"
b100 '#
b1000000 ["
b1000000 `
b1000000 Q"
b1000000 `"
1h
1n
#550
0}"
b10000 <"
11"
1O
1|
1:
04"
0R
0q
0/
0h
0n
#560
1}"
bz ["
bz `
bz Q"
bz `"
15#
1-
1h
1n
#570
x6#
b100000 <"
1$"
1@
01"
0O
0|
0:
0h
0n
#580
06#
b1111 ~"
b1111 (
b1111 x"
b1111 &#
0|"
0,
1h
1n
#590
b1 <"
0$"
0@
1|
1:
0h
0n
#600
05#
0-
1h
1n
#610
b10 <"
0|
0:
16"
1T
1!"
1=
0h
0n
#620
b101 J"
b101 Z
b101 H"
b101 M"
b101 D"
b101 \
b101 @"
b101 I"
1h
1n
#630
b100 <"
06"
0T
0!"
0=
1s
11
0h
0n
#640
b110 C"
1h
1n
